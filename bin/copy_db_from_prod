#!/usr/bin/env ruby

require 'copy_db_from_prod'

def echo_wrong_args
  puts("Wrong args")
end

def echo_help
  puts("copy_db_from_prod -h <host> -u <user> -p <path> [--schema-only, --env_data, -acc_data]
    <user> - default 'deploy'
    <path> - default '/projects/insales3', without / at the end")
end

def schema_only(params)
  p = CopyDbFromProd.new(params)
  p.load_schema
  puts('Load schema success')
end

def env_data(params)
  p = CopyDbFromProd.new(params)
  p.load_env_table  
  puts('Load env tables data')
end

class Wraper
  attr_accessor :shell_args, :host

  def initialize(args)
    @shell_args = args
    shell_args.each_with_index do |e, i|
      if '-h' == e
        @host = shell_args[i + 1] if '-' != shell_args[i + 1][0]
      elsif '-u' == e
        @user = shell_args[i + 1] if '-' != shell_args[i + 1][0]
      elsif '-p' == e
        @path = shell_args[i + 1] if '-' != shell_args[i + 1][0]
      end
    end
  end

  def include?(one)
    @exec ||= shell_args.include?(one)
    shell_args.include?(one)
  end

  def exec?
    @exec
  end

  def user
    @user ||= 'deploy'
  end

  def path
    @path ||= '/projects/insales3'
  end
end

w = Wraper.new(ARGV)

if ARGV.empty?
  echo_help
else
  schema_only(w) if w.include?('--schema-only')
  env_data(w) if w.include?('--env_data')
  CopyDbFromProd.hi if w.include?('--hi')
  echo_help if w.include?('--help')
  echo_wrong_args if !w.exec?
end
